{"version":3,"sources":["components/Weather.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","className","country","city","humidity","temp","description","error","Form","onSubmit","fun_getWeather","type","name","placeholder","api_key","App","state","getWeather","e","a","preventDefault","target","value","fetch","api","json","data","setState","sys","main","weather","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA8BeA,MA5Bf,SAAiBC,GAEb,OACI,sBAAKC,UAAU,UAAf,UAEQD,EAAME,QAAU,oBAAGD,UAAU,UAAb,sBAAiCD,EAAME,QAAvC,OAAuD,GAGvEF,EAAMG,KAAO,oBAAGF,UAAU,OAAb,mBAA2BD,EAAMG,KAAjC,OAA8C,GAG3DH,EAAMI,SAAW,oBAAGH,UAAU,WAAb,uBAAmCD,EAAMI,SAAzC,OAA0D,GAG3EJ,EAAMK,KAAO,oBAAGJ,UAAU,OAAb,yBAAiCD,EAAMK,KAAvC,OAAoD,GAGjEL,EAAMM,YAAc,oBAAGL,UAAU,MAAb,0BAAiCD,EAAMM,YAAvC,OAA2D,GAG/EN,EAAMO,MAAQ,oBAAGN,UAAU,QAAb,oBAA6BD,EAAMO,MAAnC,OAAiD,OCXhEC,MAVf,SAAcR,GACV,OACI,uBAAMS,SAAUT,EAAMU,eAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,oBAC3C,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,uBAC9C,wBAAQZ,UAAU,UAAlB,wBCDNa,G,MAAU,oCA8DDC,E,4MA3DbC,MAAQ,CACNd,QAAS,GACTC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,YAAa,GACbC,MAAO,I,EAITU,W,uCAAa,WAAOC,GAAP,qBAAAC,EAAA,6DACXD,EAAEE,iBACIjB,EAAOe,EAAEG,OAAOlB,KAAKmB,MACrBpB,EAAUgB,EAAEG,OAAOnB,QAAQoB,MAHtB,SAIOC,MAAM,qDAAD,OAAsDpB,EAAtD,YAA8DD,EAA9D,kBAA+EY,IAJ3F,cAILU,EAJK,gBAKQA,EAAIC,OALZ,OAKLC,EALK,OAQPvB,GAAQD,EACV,EAAKyB,SAAS,CACZzB,QAASwB,EAAKE,IAAI1B,QAClBC,KAAMuB,EAAKd,KACXR,SAAUsB,EAAKG,KAAKzB,SACpBC,KAAMqB,EAAKG,KAAKxB,KAChBC,YAAaoB,EAAKI,QAAQ,GAAGxB,YAC7BC,MAAO,KAIT,EAAKoB,SAAS,CACZzB,QAAS,GACTC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,YAAa,GACbC,MAAO,2BAzBA,4C,6GAgCX,OACE,sBAAKN,UAAU,MAAf,UACE,oBAAIA,UAAU,gBAAd,0CACA,cAAC,EAAD,CAAMS,eAAgBqB,KAAKd,aAC3B,cAAC,EAAD,CACEf,QAAS6B,KAAKf,MAAMd,QACpBC,KAAM4B,KAAKf,MAAMb,KACjBC,SAAU2B,KAAKf,MAAMZ,SACrBC,KAAM0B,KAAKf,MAAMX,KACjBC,YAAayB,KAAKf,MAAMV,YACxBC,MAAOwB,KAAKf,MAAMT,e,GAtDVyB,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.204208ca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Weather(props) {\r\n\r\n    return (\r\n        <div className=\"weather\">\r\n            {\r\n                props.country ? <p className=\"country\">country: {props.country} </p> : \"\"\r\n            }\r\n            {\r\n                props.city ? <p className=\"city\">city: {props.city} </p> : \"\"\r\n            }\r\n            {\r\n                props.humidity ? <p className=\"humidity\">humidity: {props.humidity} </p> : \"\"\r\n            }\r\n            {\r\n                props.temp ? <p className=\"temp\">temprature: {props.temp} </p> : \"\"\r\n            }\r\n            {\r\n                props.description ? <p className=\"esc\">description: {props.description} </p> : \"\"\r\n            }\r\n            {\r\n                props.error ? <p className=\"error\">error: {props.error} </p> : \"\"\r\n            }\r\n\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nfunction Form(props) {\r\n    return (\r\n        <form onSubmit={props.fun_getWeather}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"Input Your City\" />\r\n            <input type=\"text\" name=\"country\" placeholder=\"Input Your Country\" />\r\n            <button className=\"btn_sub\">submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import Weather from \"./components/Weather\";\nimport Form from \"./components/Form\";\nimport './App.css';\nimport React from \"react\";\n\nconst api_key = \"bd143cad3776322f6654925a09264955\";\nclass App extends React.Component {\n\n  state = {\n    country: \"\",\n    city: \"\",\n    humidity: \"\",\n    temp: \"\",\n    description: \"\",\n    error: \"\"\n  }\n\n  // Get Weather Function\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.city.value;\n    const country = e.target.country.value;\n    const api = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${api_key}`)\n    const data = await api.json();\n\n    // check if there a city and country\n    if (city && country) {\n      this.setState({\n        country: data.sys.country,\n        city: data.name,\n        humidity: data.main.humidity,\n        temp: data.main.temp,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    }\n    else {\n      this.setState({\n        country: '',\n        city: '',\n        humidity: '',\n        temp: '',\n        description: '',\n        error: \"Please Input Your Data\"\n      });\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h2 className=\"title_weather\">show some info about weather</h2>\n        <Form fun_getWeather={this.getWeather} />\n        <Weather\n          country={this.state.country}\n          city={this.state.city}\n          humidity={this.state.humidity}\n          temp={this.state.temp}\n          description={this.state.description}\n          error={this.state.error} />\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}